#!/usr/bin/env node
// backend/bin/www
const { port } = require('../config');
const socket = require("socket.io");
const app = require('../app');
const { get_Current_User, user_Disconnect, join_User } = require("../utils/server");
const db = require('../db/models');

// Check the database connection before starting the app
let io;
db.sequelize
  .authenticate()
  .then(() => {
    console.log('Database connection success! Sequelize is ready to use...');

    // Start listening for connections
    let server = app.listen(port, () => console.log(`Listening on port ${port}...`));
    io = socket(server);
    io.on("connection", (socket) => {
      //for a new user joining the room
      socket.on("joinRoom", ({ username, roomId }) => {
        //* create user

        const p_user = join_User(socket.id, username, roomId);
        console.log(socket.id, "=id");
        socket.join(p_user.room);

      });

      //user sending message
      socket.on("chat", (text) => {
        //gets the room user and the message sent
        const p_user = get_Current_User(socket.id);

        io.to(p_user.room).emit("message", {
          userId: p_user.id,
          username: p_user.username,
          text: text,
        });
      });

      //when the user exits the room
      socket.on("disconnect", () => {
        //the user is deleted from array of users and a left room message displayed
        const p_user = user_Disconnect(socket.id);
      });
    });

  })
  .catch((err) => {
    console.log('Database connection failure.');
    console.error(err);
  });
